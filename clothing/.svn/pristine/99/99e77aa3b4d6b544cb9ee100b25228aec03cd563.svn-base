/**
 * _______________ *______________ *______________ *_____________ *____________ *____________ *___________ *__________ *________ *_______ *_______ *______ *_____ *____ *____ *___ *___ *___ *___ *____ *_____ *______ *________
 */
package com.pyjh.clothing.controller;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.github.pagehelper.Page;
import com.pyjh.clothing.entity.PageData;
import com.pyjh.clothing.service.ShopCartService;
import com.pyjh.clothing.util.CodeMessage;
import com.pyjh.clothing.util.Message;
import com.sun.corba.se.spi.ior.ObjectKey;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("shopCart")
@Api(value = "shopCart", description = "购物车接口")
public class ShopCartController extends CodeMessage {

    @Resource
    ShopCartService shopCartService;

    @ApiOperation("获取用户购物车")
    @RequestMapping(value = "/getMemberShopCart", method = RequestMethod.GET)
    public String getMemberShopCart(Integer memberId) {
        if (memberId == null) {
            return Message.mesFalse(code_400, message_400);
        }
        Map<Object, Object> map = new HashMap<Object, Object>();
        List<PageData> shopCartList = shopCartService.getMemberShopCart(memberId);
        for (PageData pageData : shopCartList) {
            pageData.put("sku", shopCartService.getCartSku(pageData.getInteger("shop_cart_id")));
        }
        if (shopCartList != null) {
            return Message.mesTrue(code_200, JSON.toJSONString(shopCartList), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("获取用户购物车")
    @RequestMapping(value = "/getShopCartSku", method = RequestMethod.GET)
    public String getShopCartSku(Integer cartId) {
        if (cartId == null) {
            return Message.mesFalse(code_400, message_400);
        }
        List<PageData> shopCartList = shopCartService.getCartSku(cartId);
        if (shopCartList != null) {
            return Message.mesTrue(code_200, JSON.toJSONString(shopCartList), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("加入购物车")
    @RequestMapping(value = "/addMemberShopCart", method = RequestMethod.POST)
    public String addMemberShopCart(String shopCart) {
        if (shopCart == null) {
            return Message.mesFalse(code_400, message_400);
        }
        PageData pageData = JSONObject.parseObject(shopCart, PageData.class);
        Integer res = shopCartService.addMemberShopCart(pageData);
        List skulist = (List) pageData.get("sku");
        System.out.println(JSON.toJSONString(skulist));
        PageData data = new PageData();
        data.put("cartId", shopCartService.getMaxShopCart());
        for (Object pd : skulist) {
            data.put("skuId", pd);
            shopCartService.addShopOrderSku(data);
        }
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("修改购物车")
    @RequestMapping(value = "/modifyMemberShopCart", method = RequestMethod.POST)
    public String modifyMemberShopCart(String shopCart) {
        if (shopCart == null) {
            return Message.mesFalse(code_400, message_400);
        }
        PageData pageData = JSONObject.parseObject(shopCart, PageData.class);
        Integer res = shopCartService.editMemberShopCart(pageData);
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("删除购物车信息")
    @RequestMapping(value = "/deleteMemberShopCart", method = RequestMethod.POST)
    public String deleteMemberShopCart(Integer shopCartId) {
        if (shopCartId == null) {
            return Message.mesFalse(code_400, message_400);
        }
        Integer res = shopCartService.deleteMemChopCart(shopCartId);
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }
}
