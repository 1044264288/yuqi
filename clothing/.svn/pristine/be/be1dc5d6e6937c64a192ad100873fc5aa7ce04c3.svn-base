/**
 * _______________ *______________ *______________ *_____________ *____________ *____________ *___________ *__________ *________ *_______ *_______ *______ *_____ *____ *____ *___ *___ *___ *___ *____ *_____ *______ *________
 */
package com.pyjh.clothing.controller;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.pyjh.clothing.entity.PageData;
import com.pyjh.clothing.service.AddressService;
import com.pyjh.clothing.util.CodeMessage;
import com.pyjh.clothing.util.Message;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

@RestController
@RequestMapping("address")
@Api(value = "address",description = "收货地址接口")
public class AddressController extends CodeMessage {

    @Resource
    AddressService addressService;

    @ApiOperation("获取用户购物车")
    @RequestMapping(value = "/getMemberAddress", method = RequestMethod.GET)
    public String getMemberAddress(Integer memberId) {
        if (memberId == null) {
            return Message.mesFalse(code_400, message_400);
        }
        List<PageData> shopCartList = addressService.getMemberAddress(memberId);
        if (shopCartList != null) {
            return Message.mesTrue(code_200, JSON.toJSONString(shopCartList), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }


    @ApiOperation("新增收获地址")
    @RequestMapping(value = "/addMemberAddress", method = RequestMethod.POST)
    public String addMemberAddress(String address) {
        if (address == null) {
            return Message.mesFalse(code_400, message_400);
        }
        PageData pageData = JSONObject.parseObject(address, PageData.class);
        System.out.println(JSON.toJSONString(pageData));
        Integer res = addressService.addMemberAddress(pageData);
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("修改购物车")
    @RequestMapping(value = "/modifyMemberShopCart", method = RequestMethod.POST)
    public String modifyMemberShopCart(String address) {
        if (address == null) {
            return Message.mesFalse(code_400, message_400);
        }
        PageData pageData = JSONObject.parseObject(address, PageData.class);
        Integer res = addressService.editMemberAddress(pageData);
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("删除收货地址")
    @RequestMapping(value = "/deleteMemberAddress", method = RequestMethod.POST)
    public String deleteMemberAddress(Integer addressId) {
        if (addressId == null) {
            return Message.mesFalse(code_400, message_400);
        }
        Integer res = addressService.deleteMemAddress(addressId);
        if (res > 0) {
            return Message.mesTrue(code_200, JSON.toJSONString(res), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }
}
