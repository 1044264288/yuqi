/**
 * _______________ *______________ *______________ *_____________ *____________ *____________ *___________ *__________ *________ *_______ *_______ *______ *_____ *____ *____ *___ *___ *___ *___ *____ *_____ *______ *________
 */
package com.pyjh.clothing.controller;

import com.alibaba.fastjson.JSON;
import com.pyjh.clothing.entity.PageData;
import com.pyjh.clothing.service.HomeBannerService;
import com.pyjh.clothing.util.CodeMessage;
import com.pyjh.clothing.util.Message;
import com.pyjh.clothing.util.QiniuCloudUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("banner")
@Api(value = "banner",description = "首页banner接口")
public class HomeBannerController extends CodeMessage {

    @Resource
    HomeBannerService homeBannerService;

    @ApiOperation("获取首页banner")
    @RequestMapping(value = "/getHomeBanner", method = RequestMethod.GET)
    public String getHomeBanner() {
        List<PageData> data = homeBannerService.getHomeBanner();
        if (data != null) {
            String res = JSON.toJSONString(data);
            return Message.mesTrue(code_200, res, message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("获取分类页banner")
    @RequestMapping(value = "/getTypeBanner", method = RequestMethod.GET)
    public String getTypeBanner() {
        List<PageData> data = homeBannerService.getTypeBanner();
        if (data != null) {
            String res = JSON.toJSONString(data);
            return Message.mesTrue(code_200, res, message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }


    @ApiOperation("新增banner")
    @RequestMapping(value = "/addBanner", method = RequestMethod.POST)
    public String addBanner(@RequestParam MultipartFile[] image, String targetUrl,
                            Integer ifVideo) throws Exception {
        String[] url = urlImg(image);
        int a = 0;
        for (int i = 0; i > url.length; i++) {
            if (homeBannerService.addHomeBanner(url[i], targetUrl, ifVideo)) {
                a++;
            }
        }
        if (a == url.length) {
            return Message.mesTrue(code_200, JSON.toJSONString(url), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    @ApiOperation("修改banner")
    @RequestMapping(value = "/modifyBanner", method = RequestMethod.POST)
    public String modifyBanner(@RequestParam MultipartFile[] image, String homeBannerId,
                               String targetUrl, Integer state, Integer ifVideo) throws Exception {
        String[] url = urlImg(image);
        String[] bannerId = homeBannerId.split(",");
        int a = 0;
        for (int i = 0; i > url.length; i++) {
            if (homeBannerService.editHomeBanner(url[i], Integer.parseInt(bannerId[i]),
                    targetUrl, state, ifVideo)) {
                a++;
            }
        }
        if (a == bannerId.length) {
            return Message.mesTrue(code_200, JSON.toJSONString(url), message_200);
        }
        return Message.mesFalse(code_501, message_501);
    }

    private String[] urlImg(MultipartFile[] image) throws Exception {
        QiniuCloudUtil qiniuCloudUtil = new QiniuCloudUtil();
        String[] data = null;
        for (int i = 0; i < image.length; i++) {
            byte[] bytes = image[i].getBytes();
            String imageName = "pyjh/son/" + UUID.randomUUID().toString();
            String url = qiniuCloudUtil.put64image(bytes, imageName);
            data[i] = url;
        }
        return data;
    }
}
